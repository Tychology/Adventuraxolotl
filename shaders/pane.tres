[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://djmqoc8qpne65"]

[sub_resource type="Gradient" id="Gradient_0486b"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_gmfxe"]
fractal_octaves = 4

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_al3m4"]
seamless = true
seamless_blend_skirt = 0.845
color_ramp = SubResource("Gradient_0486b")
noise = SubResource("FastNoiseLite_gmfxe")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_bgdox"]
output_port_for_preview = 0
source = 5
texture = SubResource("NoiseTexture2D_al3m4")

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_o7obs"]
parameter_name = "Texture2DParameter"
texture_repeat = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_60f2o"]
size = Vector2(353.904, 244.658)
expression = "o.x =  size.x / 512.0 * UV.x ;
o.y =  size.y / 512.0 * UV.y / 1.5;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jwobr"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_0jqt3"]
parameter_name = "size"

[resource]
code = "shader_type canvas_item;
uniform vec2 size;
uniform sampler2D Texture2DParameter : repeat_enable;



void fragment() {
// Vector2Parameter:6
	vec2 n_out6p0 = size;


	vec2 n_out4p0;
// Expression:4
	n_out4p0 = vec2(0.0, 0.0);
	{
		n_out4p0.x =  n_out6p0.x / 512.0 * UV.x ;
		n_out4p0.y =  n_out6p0.y / 512.0 * UV.y / 1.5;
	}


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(Texture2DParameter, n_out4p0);


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);


}
"
graph_offset = Vector2(-603.825, -407.96)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(700, -120)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_bgdox")
nodes/fragment/2/position = Vector2(300, -480)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_o7obs")
nodes/fragment/3/position = Vector2(-140, -240)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_60f2o")
nodes/fragment/4/position = Vector2(-220, -500)
nodes/fragment/4/size = Vector2(353.904, 244.658)
nodes/fragment/4/input_ports = "0,3,size;"
nodes/fragment/4/output_ports = "0,3,o;"
nodes/fragment/4/expression = "o.x =  size.x / 512.0 * UV.x ;
o.y =  size.y / 512.0 * UV.y / 1.5;"
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_jwobr")
nodes/fragment/5/position = Vector2(-600, -440)
nodes/fragment/6/node = SubResource("VisualShaderNodeVec2Parameter_0jqt3")
nodes/fragment/6/position = Vector2(-500, -260)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 4, 0, 2, 0, 3, 0, 2, 2, 6, 0, 4, 0)
